# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ProductIngredient {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  count: Int!
  user: User!
  product: Product!
  ingredient: Ingredient!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Ingredient {
  id: Int!
  name: String!
  price: Float!
  unit: String!
  user: User!
  productIngredients: [ProductIngredient!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: Int!
  email: String!
  firstName: String
  lastName: String
  isSeller: Boolean!
  city: City
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Photo {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  url: String!
}

type Product {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  count: Int!
  isPublished: Boolean!
  delivery: Boolean!
  shipping: Boolean!
  pickup: Boolean!
  user: User!
  city: City!
  productIngredients: [ProductIngredient!]
  photos: [Photo!]
}

type City {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  district: String!
  voivodeship: String!
  latitude: Float!
  longitude: Float!
}

type Query {
  searchCity(query: String!): [City!]!
  me: User!
  ingredients: [Ingredient!]!
  products(limit: Int!, currentPage: Int = 0, filter: ProductsFilterType, order: ProductsOrderType): [Product!]!
  getUserProducts(limit: Int!, currentPage: Int = 0, filter: ProductsFilterType, order: ProductsOrderType): [Product!]!
}

input ProductsFilterType {
  city: Int
  user: Int
}

input ProductsOrderType {
  createdAt: OrderEnum
  price: OrderEnum
  isPublished: OrderEnum
}

enum OrderEnum {
  ASC
  DESC
}

type Mutation {
  createUser(email: String!, password: String!): User!
  createSeller(email: String!, password: String!, firstName: String!, lastName: String!, city: Float!): User!
  login(email: String!, password: String!): Boolean!
  logout: Boolean!
  createIngredient(name: String!, price: Float!, unit: String!): Ingredient!
  updateIngredient(name: String!, price: Float!, unit: String!, id: Int!): Ingredient!
  deleteIngredient(id: [Int!]!): Boolean!
  createProduct(name: String!, price: Float!, count: Float!, isPublished: Boolean = false, delivery: Boolean = false, shipping: Boolean = false, pickup: Boolean = false, photos: [Int!]): Product!
  updateProduct(name: String!, price: Float!, count: Float!, isPublished: Boolean = false, delivery: Boolean = false, shipping: Boolean = false, pickup: Boolean = false, photos: [Int!], id: Int!): Product!
  deleteProduct(id: [Int!]!): Boolean!
  createProductIngredient(count: Float!, product: Float!, ingredient: Float!): ProductIngredient!
  updateProductIngredient(count: Float!, product: Float!, ingredient: Float!, id: Int!): ProductIngredient!
  deleteProductIngredient(id: [Int!]!): Boolean!
}
